/* Generated by Yosys 0.8+285 (git sha1 a7ac8393, clang 6.0.0-1ubuntu2 -fPIC -Os) */

(* top =  1  *)
(* src = "SerieParalelo_Est.v:2" *)
module SerieParalelo_Est(clk_f, clk_8f, data_in, reset, data2send_est, BC_counter_est, valid_out_est, active_est);
  (* src = "SerieParalelo_Est.v:25" *)
  wire [3:0] _000_;
  (* src = "SerieParalelo_Est.v:18" *)
  wire [2:0] _001_;
  (* src = "SerieParalelo_Est.v:38" *)
  wire _002_;
  (* src = "SerieParalelo_Est.v:38" *)
  wire [7:0] _003_;
  (* src = "SerieParalelo_Est.v:38" *)
  wire _004_;
  (* src = "SerieParalelo_Est.v:25" *)
  wire _005_;
  (* src = "SerieParalelo_Est.v:25" *)
  wire _006_;
  (* src = "SerieParalelo_Est.v:25" *)
  wire _007_;
  (* src = "SerieParalelo_Est.v:25" *)
  wire _008_;
  (* src = "SerieParalelo_Est.v:18" *)
  wire _009_;
  (* src = "SerieParalelo_Est.v:18" *)
  wire _010_;
  (* src = "SerieParalelo_Est.v:18" *)
  wire _011_;
  (* src = "SerieParalelo_Est.v:9" *)
  wire _012_;
  (* src = "SerieParalelo_Est.v:9" *)
  wire _013_;
  (* src = "SerieParalelo_Est.v:9" *)
  wire _014_;
  (* src = "SerieParalelo_Est.v:9" *)
  wire _015_;
  (* src = "SerieParalelo_Est.v:11" *)
  wire _016_;
  (* src = "SerieParalelo_Est.v:16" *)
  wire _017_;
  (* src = "SerieParalelo_Est.v:13" *)
  wire _018_;
  (* src = "SerieParalelo_Est.v:13" *)
  wire _019_;
  (* src = "SerieParalelo_Est.v:13" *)
  wire _020_;
  (* src = "SerieParalelo_Est.v:5" *)
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _124_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _125_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _126_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _127_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _128_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _129_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _130_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _131_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _132_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _133_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _134_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _135_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _136_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _137_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _138_;
  (* src = "SerieParalelo_Est.v:14" *)
  wire _139_;
  (* src = "SerieParalelo_Est.v:6" *)
  wire _140_;
  (* src = "SerieParalelo_Est.v:10" *)
  wire _141_;
  (* src = "SerieParalelo_Est.v:16" *)
  wire _142_;
  (* src = "SerieParalelo_Est.v:34" *)
  wire [31:0] _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire [2:0] _152_;
  wire [1:0] _153_;
  wire [2:0] _154_;
  wire [1:0] _155_;
  wire [2:0] _156_;
  wire [1:0] _157_;
  wire [2:0] _158_;
  wire [1:0] _159_;
  wire [3:0] _160_;
  wire [1:0] _161_;
  wire [1:0] _162_;
  wire [2:0] _163_;
  wire [1:0] _164_;
  wire [1:0] _165_;
  wire [2:0] _166_;
  wire [1:0] _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire [7:0] _173_;
  wire [3:0] _174_;
  wire [2:0] _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:432" *)
  wire [1:0] _185_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:428" *)
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:432" *)
  wire [1:0] _195_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:428" *)
  wire _196_;
  wire [3:0] _197_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:432" *)
  wire [1:0] _198_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:428" *)
  wire _199_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:432" *)
  wire [1:0] _200_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:428" *)
  wire _201_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:432" *)
  wire [1:0] _202_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:428" *)
  wire _203_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:432" *)
  wire [1:0] _204_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:428" *)
  wire _205_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:432" *)
  wire [1:0] _206_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:428" *)
  wire _207_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:432" *)
  wire [1:0] _208_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:428" *)
  wire _209_;
  (* src = "SerieParalelo_Est.v:34|<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _210_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:445" *)
  wire _211_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:445" *)
  wire _212_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:445" *)
  wire _213_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:445" *)
  wire _214_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:445" *)
  wire _215_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:445" *)
  wire _216_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:445" *)
  wire _217_;
  (* src = "SerieParalelo_Est.v:42|<techmap.v>:445" *)
  wire _218_;
  (* src = "SerieParalelo_Est.v:19|<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _219_;
  wire [31:0] _220_;
  (* src = "SerieParalelo_Est.v:19|<techmap.v>:260|<techmap.v>:221" *)
  wire _221_;
  (* src = "SerieParalelo_Est.v:9" *)
  output [3:0] BC_counter_est;
  (* src = "SerieParalelo_Est.v:11" *)
  output active_est;
  (* src = "SerieParalelo_Est.v:16" *)
  wire active_estF;
  (* src = "SerieParalelo_Est.v:4" *)
  input clk_8f;
  (* src = "SerieParalelo_Est.v:3" *)
  input clk_f;
  (* src = "SerieParalelo_Est.v:13" *)
  wire [2:0] contador;
  (* src = "SerieParalelo_Est.v:13" *)
  wire [2:0] contadorF;
  (* src = "SerieParalelo_Est.v:8" *)
  output [7:0] data2send_est;
  (* src = "SerieParalelo_Est.v:5" *)
  input data_in;
  (* src = "SerieParalelo_Est.v:14" *)
  wire [7:0] pasoInSend;
  (* src = "SerieParalelo_Est.v:14" *)
  wire [7:0] pasoInSendF;
  (* src = "SerieParalelo_Est.v:6" *)
  input reset;
  (* src = "SerieParalelo_Est.v:10" *)
  output valid_out_est;
  (* src = "SerieParalelo_Est.v:16" *)
  wire valid_out_estF;
  NOT _222_ (
    .A(_012_),
    .Y(_068_)
  );
  NOT _223_ (
    .A(_013_),
    .Y(_069_)
  );
  NOT _224_ (
    .A(_015_),
    .Y(_070_)
  );
  NOT _225_ (
    .A(_020_),
    .Y(_071_)
  );
  NOT _226_ (
    .A(_018_),
    .Y(_072_)
  );
  NOT _227_ (
    .A(_019_),
    .Y(_073_)
  );
  NOT _228_ (
    .A(_140_),
    .Y(_074_)
  );
  NOT _229_ (
    .A(_014_),
    .Y(_075_)
  );
  NOT _230_ (
    .A(_130_),
    .Y(_076_)
  );
  NOT _231_ (
    .A(_021_),
    .Y(_077_)
  );
  NOT _232_ (
    .A(_129_),
    .Y(_078_)
  );
  NOT _233_ (
    .A(_131_),
    .Y(_079_)
  );
  NOT _234_ (
    .A(_128_),
    .Y(_080_)
  );
  NOR _235_ (
    .A(_018_),
    .B(_019_),
    .Y(_081_)
  );
  NOT _236_ (
    .A(_081_),
    .Y(_082_)
  );
  NOR _237_ (
    .A(_020_),
    .B(_082_),
    .Y(_083_)
  );
  NAND _238_ (
    .A(_071_),
    .B(_081_),
    .Y(_084_)
  );
  NAND _239_ (
    .A(_021_),
    .B(_083_),
    .Y(_085_)
  );
  NAND _240_ (
    .A(_124_),
    .B(_084_),
    .Y(_086_)
  );
  NAND _241_ (
    .A(_085_),
    .B(_086_),
    .Y(_087_)
  );
  NAND _242_ (
    .A(_140_),
    .B(_087_),
    .Y(_088_)
  );
  NOT _243_ (
    .A(_088_),
    .Y(_132_)
  );
  NOR _244_ (
    .A(_072_),
    .B(_019_),
    .Y(_089_)
  );
  NAND _245_ (
    .A(_018_),
    .B(_073_),
    .Y(_090_)
  );
  NOR _246_ (
    .A(_020_),
    .B(_090_),
    .Y(_091_)
  );
  NOR _247_ (
    .A(_125_),
    .B(_091_),
    .Y(_092_)
  );
  NAND _248_ (
    .A(_077_),
    .B(_091_),
    .Y(_093_)
  );
  NOR _249_ (
    .A(_074_),
    .B(_092_),
    .Y(_094_)
  );
  NAND _250_ (
    .A(_093_),
    .B(_094_),
    .Y(_095_)
  );
  NOT _251_ (
    .A(_095_),
    .Y(_133_)
  );
  NOR _252_ (
    .A(_018_),
    .B(_073_),
    .Y(_096_)
  );
  NAND _253_ (
    .A(_072_),
    .B(_019_),
    .Y(_097_)
  );
  NAND _254_ (
    .A(_020_),
    .B(_096_),
    .Y(_098_)
  );
  NAND _255_ (
    .A(_076_),
    .B(_098_),
    .Y(_099_)
  );
  NOR _256_ (
    .A(_021_),
    .B(_098_),
    .Y(_100_)
  );
  NOR _257_ (
    .A(_074_),
    .B(_100_),
    .Y(_101_)
  );
  NAND _258_ (
    .A(_099_),
    .B(_101_),
    .Y(_102_)
  );
  NOT _259_ (
    .A(_102_),
    .Y(_138_)
  );
  NOR _260_ (
    .A(_020_),
    .B(_097_),
    .Y(_103_)
  );
  NOR _261_ (
    .A(_126_),
    .B(_103_),
    .Y(_104_)
  );
  NAND _262_ (
    .A(_077_),
    .B(_103_),
    .Y(_105_)
  );
  NOR _263_ (
    .A(_074_),
    .B(_104_),
    .Y(_106_)
  );
  NAND _264_ (
    .A(_105_),
    .B(_106_),
    .Y(_107_)
  );
  NOT _265_ (
    .A(_107_),
    .Y(_134_)
  );
  NAND _266_ (
    .A(_018_),
    .B(_019_),
    .Y(_108_)
  );
  NOT _267_ (
    .A(_108_),
    .Y(_109_)
  );
  NOR _268_ (
    .A(_020_),
    .B(_108_),
    .Y(_110_)
  );
  NOR _269_ (
    .A(_127_),
    .B(_110_),
    .Y(_111_)
  );
  NAND _270_ (
    .A(_077_),
    .B(_110_),
    .Y(_112_)
  );
  NAND _271_ (
    .A(_140_),
    .B(_112_),
    .Y(_113_)
  );
  NOR _272_ (
    .A(_111_),
    .B(_113_),
    .Y(_135_)
  );
  NAND _273_ (
    .A(_020_),
    .B(_081_),
    .Y(_114_)
  );
  NAND _274_ (
    .A(_080_),
    .B(_114_),
    .Y(_115_)
  );
  NOR _275_ (
    .A(_021_),
    .B(_114_),
    .Y(_116_)
  );
  NAND _276_ (
    .A(_140_),
    .B(_115_),
    .Y(_117_)
  );
  NOR _277_ (
    .A(_116_),
    .B(_117_),
    .Y(_136_)
  );
  NAND _278_ (
    .A(_020_),
    .B(_089_),
    .Y(_118_)
  );
  NAND _279_ (
    .A(_078_),
    .B(_118_),
    .Y(_119_)
  );
  NOR _280_ (
    .A(_021_),
    .B(_118_),
    .Y(_120_)
  );
  NOR _281_ (
    .A(_074_),
    .B(_120_),
    .Y(_121_)
  );
  NAND _282_ (
    .A(_119_),
    .B(_121_),
    .Y(_122_)
  );
  NOT _283_ (
    .A(_122_),
    .Y(_137_)
  );
  NAND _284_ (
    .A(_020_),
    .B(_109_),
    .Y(_123_)
  );
  NAND _285_ (
    .A(_079_),
    .B(_123_),
    .Y(_022_)
  );
  NOR _286_ (
    .A(_021_),
    .B(_123_),
    .Y(_023_)
  );
  NOR _287_ (
    .A(_074_),
    .B(_023_),
    .Y(_024_)
  );
  NAND _288_ (
    .A(_022_),
    .B(_024_),
    .Y(_025_)
  );
  NOT _289_ (
    .A(_025_),
    .Y(_139_)
  );
  NOR _290_ (
    .A(_012_),
    .B(_013_),
    .Y(_026_)
  );
  NAND _291_ (
    .A(_014_),
    .B(_026_),
    .Y(_027_)
  );
  NOR _292_ (
    .A(_015_),
    .B(_027_),
    .Y(_028_)
  );
  NAND _293_ (
    .A(_142_),
    .B(_028_),
    .Y(_029_)
  );
  NOR _294_ (
    .A(_074_),
    .B(_029_),
    .Y(_141_)
  );
  NOR _295_ (
    .A(_017_),
    .B(_028_),
    .Y(_030_)
  );
  NOR _296_ (
    .A(_074_),
    .B(_030_),
    .Y(_016_)
  );
  NAND _297_ (
    .A(_135_),
    .B(_136_),
    .Y(_031_)
  );
  NOT _298_ (
    .A(_031_),
    .Y(_032_)
  );
  NOR _299_ (
    .A(_122_),
    .B(_025_),
    .Y(_033_)
  );
  NAND _300_ (
    .A(_137_),
    .B(_139_),
    .Y(_034_)
  );
  NOR _301_ (
    .A(_031_),
    .B(_034_),
    .Y(_035_)
  );
  NAND _302_ (
    .A(_032_),
    .B(_033_),
    .Y(_036_)
  );
  NOR _303_ (
    .A(_132_),
    .B(_133_),
    .Y(_037_)
  );
  NAND _304_ (
    .A(_088_),
    .B(_095_),
    .Y(_038_)
  );
  NOR _305_ (
    .A(_138_),
    .B(_107_),
    .Y(_039_)
  );
  NAND _306_ (
    .A(_102_),
    .B(_134_),
    .Y(_040_)
  );
  NOR _307_ (
    .A(_038_),
    .B(_040_),
    .Y(_041_)
  );
  NAND _308_ (
    .A(_037_),
    .B(_039_),
    .Y(_042_)
  );
  NOR _309_ (
    .A(_036_),
    .B(_042_),
    .Y(_043_)
  );
  NAND _310_ (
    .A(_035_),
    .B(_041_),
    .Y(_044_)
  );
  NOR _311_ (
    .A(_068_),
    .B(_044_),
    .Y(_045_)
  );
  NAND _312_ (
    .A(_012_),
    .B(_043_),
    .Y(_046_)
  );
  NAND _313_ (
    .A(_012_),
    .B(_140_),
    .Y(_047_)
  );
  NOT _314_ (
    .A(_047_),
    .Y(_048_)
  );
  NOR _315_ (
    .A(_043_),
    .B(_048_),
    .Y(_049_)
  );
  NOT _316_ (
    .A(_049_),
    .Y(_050_)
  );
  NAND _317_ (
    .A(_046_),
    .B(_050_),
    .Y(_051_)
  );
  NOT _318_ (
    .A(_051_),
    .Y(_005_)
  );
  NOR _319_ (
    .A(_069_),
    .B(_046_),
    .Y(_052_)
  );
  NAND _320_ (
    .A(_013_),
    .B(_045_),
    .Y(_053_)
  );
  NOR _321_ (
    .A(_069_),
    .B(_074_),
    .Y(_054_)
  );
  NOR _322_ (
    .A(_045_),
    .B(_054_),
    .Y(_055_)
  );
  NOR _323_ (
    .A(_052_),
    .B(_055_),
    .Y(_006_)
  );
  NOR _324_ (
    .A(_075_),
    .B(_053_),
    .Y(_056_)
  );
  NAND _325_ (
    .A(_014_),
    .B(_052_),
    .Y(_057_)
  );
  NAND _326_ (
    .A(_140_),
    .B(_014_),
    .Y(_058_)
  );
  NOT _327_ (
    .A(_058_),
    .Y(_059_)
  );
  NOR _328_ (
    .A(_052_),
    .B(_059_),
    .Y(_060_)
  );
  NOR _329_ (
    .A(_056_),
    .B(_060_),
    .Y(_007_)
  );
  NAND _330_ (
    .A(_070_),
    .B(_056_),
    .Y(_061_)
  );
  NAND _331_ (
    .A(_015_),
    .B(_140_),
    .Y(_062_)
  );
  NOT _332_ (
    .A(_062_),
    .Y(_063_)
  );
  NAND _333_ (
    .A(_057_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _334_ (
    .A(_061_),
    .B(_064_),
    .Y(_008_)
  );
  NAND _335_ (
    .A(_018_),
    .B(_140_),
    .Y(_009_)
  );
  NOR _336_ (
    .A(_074_),
    .B(_081_),
    .Y(_065_)
  );
  NAND _337_ (
    .A(_108_),
    .B(_065_),
    .Y(_010_)
  );
  NOR _338_ (
    .A(_071_),
    .B(_081_),
    .Y(_066_)
  );
  NOR _339_ (
    .A(_074_),
    .B(_066_),
    .Y(_067_)
  );
  NAND _340_ (
    .A(_084_),
    .B(_067_),
    .Y(_011_)
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _341_ (
    .C(clk_f),
    .D(pasoInSend[0]),
    .Q(data2send_est[0])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _342_ (
    .C(clk_f),
    .D(pasoInSend[1]),
    .Q(data2send_est[1])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _343_ (
    .C(clk_f),
    .D(pasoInSend[2]),
    .Q(data2send_est[2])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _344_ (
    .C(clk_f),
    .D(pasoInSend[3]),
    .Q(data2send_est[3])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _345_ (
    .C(clk_f),
    .D(pasoInSend[4]),
    .Q(data2send_est[4])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _346_ (
    .C(clk_f),
    .D(pasoInSend[5]),
    .Q(data2send_est[5])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _347_ (
    .C(clk_f),
    .D(pasoInSend[6]),
    .Q(data2send_est[6])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _348_ (
    .C(clk_f),
    .D(pasoInSend[7]),
    .Q(data2send_est[7])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _349_ (
    .C(clk_f),
    .D(_000_[0]),
    .Q(BC_counter_est[0])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _350_ (
    .C(clk_f),
    .D(_000_[1]),
    .Q(BC_counter_est[1])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _351_ (
    .C(clk_f),
    .D(_000_[2]),
    .Q(BC_counter_est[2])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _352_ (
    .C(clk_f),
    .D(_000_[3]),
    .Q(BC_counter_est[3])
  );
  (* src = "SerieParalelo_Est.v:25" *)
  DFF _353_ (
    .C(clk_f),
    .D(active_est),
    .Q(valid_out_estF)
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _354_ (
    .C(clk_8f),
    .D(_001_[0]),
    .Q(contadorF[0])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _355_ (
    .C(clk_8f),
    .D(_001_[1]),
    .Q(contadorF[1])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _356_ (
    .C(clk_8f),
    .D(_001_[2]),
    .Q(contadorF[2])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _357_ (
    .C(clk_8f),
    .D(pasoInSend[0]),
    .Q(pasoInSendF[0])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _358_ (
    .C(clk_8f),
    .D(pasoInSend[1]),
    .Q(pasoInSendF[1])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _359_ (
    .C(clk_8f),
    .D(pasoInSend[2]),
    .Q(pasoInSendF[2])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _360_ (
    .C(clk_8f),
    .D(pasoInSend[3]),
    .Q(pasoInSendF[3])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _361_ (
    .C(clk_8f),
    .D(pasoInSend[4]),
    .Q(pasoInSendF[4])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _362_ (
    .C(clk_8f),
    .D(pasoInSend[5]),
    .Q(pasoInSendF[5])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _363_ (
    .C(clk_8f),
    .D(pasoInSend[6]),
    .Q(pasoInSendF[6])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _364_ (
    .C(clk_8f),
    .D(pasoInSend[7]),
    .Q(pasoInSendF[7])
  );
  (* src = "SerieParalelo_Est.v:18" *)
  DFF _365_ (
    .C(clk_8f),
    .D(active_est),
    .Q(active_estF)
  );
  assign pasoInSend[0] = _132_;
  assign pasoInSend[1] = _133_;
  assign pasoInSend[6] = _138_;
  assign _012_ = BC_counter_est[0];
  assign _013_ = BC_counter_est[1];
  assign _015_ = BC_counter_est[3];
  assign _020_ = contadorF[2];
  assign _018_ = contadorF[0];
  assign _019_ = contadorF[1];
  assign _017_ = active_estF;
  assign _142_ = valid_out_estF;
  assign _140_ = reset;
  assign pasoInSend[2] = _134_;
  assign pasoInSend[3] = _135_;
  assign pasoInSend[4] = _136_;
  assign pasoInSend[5] = _137_;
  assign pasoInSend[7] = _139_;
  assign valid_out_est = _141_;
  assign active_est = _016_;
  assign _000_[0] = _005_;
  assign _000_[1] = _006_;
  assign _000_[2] = _007_;
  assign _000_[3] = _008_;
  assign _014_ = BC_counter_est[2];
  assign _130_ = pasoInSendF[6];
  assign _021_ = data_in;
  assign _129_ = pasoInSendF[5];
  assign _127_ = pasoInSendF[3];
  assign _125_ = pasoInSendF[1];
  assign _131_ = pasoInSendF[7];
  assign _126_ = pasoInSendF[2];
  assign _128_ = pasoInSendF[4];
  assign _124_ = pasoInSendF[0];
  assign _001_[0] = _009_;
  assign _001_[1] = _010_;
  assign _001_[2] = _011_;
endmodule
