/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 4.8.4-2ubuntu1~14.04.3 -O2 -fstack-protector -fPIC -Os) */

(* src = "paralelo_serie_synth.v:1" *)
module paralelo_serie_synth(data_inP, reset, clk_8f, clk_f, valid_in, data2send, data_outS);
  (* src = "paralelo_serie_synth.v:22" *)
  wire [2:0] _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  (* src = "paralelo_serie_synth.v:4" *)
  input clk_8f;
  (* src = "paralelo_serie_synth.v:5" *)
  input clk_f;
  (* src = "paralelo_serie_synth.v:7" *)
  output [7:0] data2send;
  (* src = "paralelo_serie_synth.v:2" *)
  input [7:0] data_inP;
  (* src = "paralelo_serie_synth.v:8" *)
  output data_outS;
  (* src = "paralelo_serie_synth.v:10" *)
  wire [2:0] out44F;
  (* src = "paralelo_serie_synth.v:3" *)
  input reset;
  (* src = "paralelo_serie_synth.v:6" *)
  input valid_in;
  NOT _045_ (
    .A(valid_in),
    .Y(_001_)
  );
  NOT _046_ (
    .A(reset),
    .Y(_002_)
  );
  NOR _047_ (
    .A(_002_),
    .B(_001_),
    .Y(_003_)
  );
  NAND _048_ (
    .A(_003_),
    .B(data_inP[0]),
    .Y(_004_)
  );
  NOT _049_ (
    .A(_004_),
    .Y(data2send[0])
  );
  NAND _050_ (
    .A(_003_),
    .B(data_inP[1]),
    .Y(_005_)
  );
  NOT _051_ (
    .A(_005_),
    .Y(data2send[1])
  );
  NOT _052_ (
    .A(data_inP[2]),
    .Y(_006_)
  );
  NAND _053_ (
    .A(_003_),
    .B(_006_),
    .Y(data2send[2])
  );
  NAND _054_ (
    .A(reset),
    .B(valid_in),
    .Y(_007_)
  );
  NOR _055_ (
    .A(_007_),
    .B(data_inP[3]),
    .Y(_008_)
  );
  NOT _056_ (
    .A(_008_),
    .Y(data2send[3])
  );
  NOR _057_ (
    .A(_007_),
    .B(data_inP[4]),
    .Y(_009_)
  );
  NOT _058_ (
    .A(_009_),
    .Y(data2send[4])
  );
  NOR _059_ (
    .A(_007_),
    .B(data_inP[5]),
    .Y(_010_)
  );
  NOT _060_ (
    .A(_010_),
    .Y(data2send[5])
  );
  NOT _061_ (
    .A(data_inP[6]),
    .Y(_011_)
  );
  NOR _062_ (
    .A(_007_),
    .B(_011_),
    .Y(data2send[6])
  );
  NOT _063_ (
    .A(data_inP[7]),
    .Y(_012_)
  );
  NAND _064_ (
    .A(_003_),
    .B(_012_),
    .Y(data2send[7])
  );
  NOT _065_ (
    .A(out44F[0]),
    .Y(_013_)
  );
  NOR _066_ (
    .A(_013_),
    .B(_002_),
    .Y(_014_)
  );
  NOT _067_ (
    .A(out44F[2]),
    .Y(_015_)
  );
  NAND _068_ (
    .A(_008_),
    .B(_015_),
    .Y(_016_)
  );
  NOT _069_ (
    .A(out44F[1]),
    .Y(_017_)
  );
  NOR _070_ (
    .A(data2send[7]),
    .B(_015_),
    .Y(_018_)
  );
  NOR _071_ (
    .A(_018_),
    .B(_017_),
    .Y(_019_)
  );
  NAND _072_ (
    .A(_019_),
    .B(_016_),
    .Y(_020_)
  );
  NAND _073_ (
    .A(_015_),
    .B(_017_),
    .Y(_021_)
  );
  NOR _074_ (
    .A(_021_),
    .B(_005_),
    .Y(_022_)
  );
  NAND _075_ (
    .A(out44F[2]),
    .B(_017_),
    .Y(_023_)
  );
  NOR _076_ (
    .A(_023_),
    .B(_010_),
    .Y(_024_)
  );
  NOR _077_ (
    .A(_024_),
    .B(_022_),
    .Y(_025_)
  );
  NAND _078_ (
    .A(_025_),
    .B(_020_),
    .Y(_026_)
  );
  NAND _079_ (
    .A(_026_),
    .B(_014_),
    .Y(_027_)
  );
  NAND _080_ (
    .A(data2send[2]),
    .B(_015_),
    .Y(_028_)
  );
  NAND _081_ (
    .A(data2send[6]),
    .B(out44F[2]),
    .Y(_029_)
  );
  NAND _082_ (
    .A(_029_),
    .B(_028_),
    .Y(_030_)
  );
  NAND _083_ (
    .A(_030_),
    .B(out44F[1]),
    .Y(_031_)
  );
  NOR _084_ (
    .A(_021_),
    .B(_004_),
    .Y(_032_)
  );
  NOR _085_ (
    .A(_023_),
    .B(_009_),
    .Y(_033_)
  );
  NOR _086_ (
    .A(_033_),
    .B(_032_),
    .Y(_034_)
  );
  NAND _087_ (
    .A(_034_),
    .B(_031_),
    .Y(_035_)
  );
  NOR _088_ (
    .A(out44F[0]),
    .B(_002_),
    .Y(_036_)
  );
  NAND _089_ (
    .A(_036_),
    .B(_035_),
    .Y(_037_)
  );
  NAND _090_ (
    .A(_037_),
    .B(_027_),
    .Y(data_outS)
  );
  NOT _091_ (
    .A(_014_),
    .Y(_000_[0])
  );
  NAND _092_ (
    .A(out44F[1]),
    .B(out44F[0]),
    .Y(_038_)
  );
  NOR _093_ (
    .A(out44F[1]),
    .B(out44F[0]),
    .Y(_039_)
  );
  NOR _094_ (
    .A(_039_),
    .B(_002_),
    .Y(_040_)
  );
  NAND _095_ (
    .A(_040_),
    .B(_038_),
    .Y(_000_[1])
  );
  NOT _096_ (
    .A(_040_),
    .Y(_041_)
  );
  NOR _097_ (
    .A(_041_),
    .B(out44F[2]),
    .Y(_042_)
  );
  NOT _098_ (
    .A(_036_),
    .Y(_043_)
  );
  NOR _099_ (
    .A(_043_),
    .B(_023_),
    .Y(_044_)
  );
  NOR _100_ (
    .A(_044_),
    .B(_042_),
    .Y(_000_[2])
  );
  DFF _101_ (
    .C(clk_8f),
    .D(_000_[0]),
    .Q(out44F[0])
  );
  DFF _102_ (
    .C(clk_8f),
    .D(_000_[1]),
    .Q(out44F[1])
  );
  DFF _103_ (
    .C(clk_8f),
    .D(_000_[2]),
    .Q(out44F[2])
  );
endmodule

(* src = "byte_striping_synth.v:1" *)
module byte_striping_synth(clk_2f, clk_f, valid_in, data_in, reset, lane_0, lane_1, valid_0F, valid_1F);
  (* src = "byte_striping_synth.v:15" *)
  wire _000_;
  (* src = "byte_striping_synth.v:15" *)
  wire _001_;
  (* src = "byte_striping_synth.v:15" *)
  wire [7:0] _002_;
  (* src = "byte_striping_synth.v:15" *)
  wire [7:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  (* src = "byte_striping_synth.v:2" *)
  input clk_2f;
  (* src = "byte_striping_synth.v:3" *)
  inout clk_f;
  (* src = "byte_striping_synth.v:14" *)
  wire contador0;
  (* src = "byte_striping_synth.v:14" *)
  wire contador1;
  (* src = "byte_striping_synth.v:5" *)
  input [7:0] data_in;
  (* src = "byte_striping_synth.v:7" *)
  output [7:0] lane_0;
  (* src = "byte_striping_synth.v:8" *)
  output [7:0] lane_1;
  (* src = "byte_striping_synth.v:6" *)
  input reset;
  (* src = "byte_striping_synth.v:9" *)
  output valid_0F;
  (* src = "byte_striping_synth.v:10" *)
  output valid_1F;
  (* src = "byte_striping_synth.v:4" *)
  input valid_in;
  NOT _084_ (
    .A(valid_in),
    .Y(_039_)
  );
  NOT _085_ (
    .A(contador0),
    .Y(_040_)
  );
  NOR _086_ (
    .A(_040_),
    .B(_039_),
    .Y(_041_)
  );
  NAND _087_ (
    .A(_040_),
    .B(_039_),
    .Y(_042_)
  );
  NAND _088_ (
    .A(_042_),
    .B(reset),
    .Y(_043_)
  );
  NOR _089_ (
    .A(_043_),
    .B(_041_),
    .Y(_000_)
  );
  NOT _090_ (
    .A(contador1),
    .Y(_044_)
  );
  NAND _091_ (
    .A(_044_),
    .B(valid_in),
    .Y(_045_)
  );
  NOT _092_ (
    .A(reset),
    .Y(_046_)
  );
  NOR _093_ (
    .A(_044_),
    .B(valid_in),
    .Y(_047_)
  );
  NOR _094_ (
    .A(_047_),
    .B(_046_),
    .Y(_048_)
  );
  NAND _095_ (
    .A(_048_),
    .B(_045_),
    .Y(_001_)
  );
  NOT _096_ (
    .A(lane_1[0]),
    .Y(_049_)
  );
  NAND _097_ (
    .A(contador0),
    .B(valid_in),
    .Y(_050_)
  );
  NAND _098_ (
    .A(_045_),
    .B(_050_),
    .Y(_051_)
  );
  NOR _099_ (
    .A(_051_),
    .B(_049_),
    .Y(_052_)
  );
  NOT _100_ (
    .A(data_in[0]),
    .Y(_053_)
  );
  NOR _101_ (
    .A(contador1),
    .B(_039_),
    .Y(_054_)
  );
  NOR _102_ (
    .A(_054_),
    .B(_041_),
    .Y(_055_)
  );
  NOR _103_ (
    .A(_055_),
    .B(_053_),
    .Y(_056_)
  );
  NOR _104_ (
    .A(_056_),
    .B(_052_),
    .Y(_057_)
  );
  NOR _105_ (
    .A(_057_),
    .B(_046_),
    .Y(_003_[0])
  );
  NOT _106_ (
    .A(lane_1[1]),
    .Y(_058_)
  );
  NOR _107_ (
    .A(_051_),
    .B(_058_),
    .Y(_059_)
  );
  NOT _108_ (
    .A(data_in[1]),
    .Y(_060_)
  );
  NOR _109_ (
    .A(_055_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _110_ (
    .A(_061_),
    .B(_059_),
    .Y(_062_)
  );
  NOR _111_ (
    .A(_062_),
    .B(_046_),
    .Y(_003_[1])
  );
  NOT _112_ (
    .A(lane_1[2]),
    .Y(_063_)
  );
  NOR _113_ (
    .A(_051_),
    .B(_063_),
    .Y(_064_)
  );
  NOT _114_ (
    .A(data_in[2]),
    .Y(_065_)
  );
  NOR _115_ (
    .A(_055_),
    .B(_065_),
    .Y(_066_)
  );
  NOR _116_ (
    .A(_066_),
    .B(_064_),
    .Y(_067_)
  );
  NOR _117_ (
    .A(_067_),
    .B(_046_),
    .Y(_003_[2])
  );
  NOT _118_ (
    .A(lane_1[3]),
    .Y(_068_)
  );
  NOR _119_ (
    .A(_051_),
    .B(_068_),
    .Y(_069_)
  );
  NOT _120_ (
    .A(data_in[3]),
    .Y(_070_)
  );
  NOR _121_ (
    .A(_055_),
    .B(_070_),
    .Y(_071_)
  );
  NOR _122_ (
    .A(_071_),
    .B(_069_),
    .Y(_072_)
  );
  NOR _123_ (
    .A(_072_),
    .B(_046_),
    .Y(_003_[3])
  );
  NOT _124_ (
    .A(lane_1[4]),
    .Y(_073_)
  );
  NOR _125_ (
    .A(_051_),
    .B(_073_),
    .Y(_074_)
  );
  NOT _126_ (
    .A(data_in[4]),
    .Y(_075_)
  );
  NOR _127_ (
    .A(_055_),
    .B(_075_),
    .Y(_076_)
  );
  NOR _128_ (
    .A(_076_),
    .B(_074_),
    .Y(_077_)
  );
  NOR _129_ (
    .A(_077_),
    .B(_046_),
    .Y(_003_[4])
  );
  NOT _130_ (
    .A(lane_1[5]),
    .Y(_078_)
  );
  NOR _131_ (
    .A(_051_),
    .B(_078_),
    .Y(_079_)
  );
  NOT _132_ (
    .A(data_in[5]),
    .Y(_080_)
  );
  NOR _133_ (
    .A(_055_),
    .B(_080_),
    .Y(_081_)
  );
  NOR _134_ (
    .A(_081_),
    .B(_079_),
    .Y(_082_)
  );
  NOR _135_ (
    .A(_082_),
    .B(_046_),
    .Y(_003_[5])
  );
  NOT _136_ (
    .A(lane_1[6]),
    .Y(_083_)
  );
  NOR _137_ (
    .A(_051_),
    .B(_083_),
    .Y(_004_)
  );
  NOT _138_ (
    .A(data_in[6]),
    .Y(_005_)
  );
  NOR _139_ (
    .A(_055_),
    .B(_005_),
    .Y(_006_)
  );
  NOR _140_ (
    .A(_006_),
    .B(_004_),
    .Y(_007_)
  );
  NOR _141_ (
    .A(_007_),
    .B(_046_),
    .Y(_003_[6])
  );
  NOT _142_ (
    .A(lane_1[7]),
    .Y(_008_)
  );
  NOR _143_ (
    .A(_051_),
    .B(_008_),
    .Y(_009_)
  );
  NOT _144_ (
    .A(data_in[7]),
    .Y(_010_)
  );
  NOR _145_ (
    .A(_055_),
    .B(_010_),
    .Y(_011_)
  );
  NOR _146_ (
    .A(_011_),
    .B(_009_),
    .Y(_012_)
  );
  NOR _147_ (
    .A(_012_),
    .B(_046_),
    .Y(_003_[7])
  );
  NOR _148_ (
    .A(contador1),
    .B(_040_),
    .Y(_013_)
  );
  NOR _149_ (
    .A(_013_),
    .B(_039_),
    .Y(_014_)
  );
  NOR _150_ (
    .A(_014_),
    .B(lane_0[0]),
    .Y(_015_)
  );
  NAND _151_ (
    .A(_014_),
    .B(_053_),
    .Y(_016_)
  );
  NAND _152_ (
    .A(_016_),
    .B(reset),
    .Y(_017_)
  );
  NOR _153_ (
    .A(_017_),
    .B(_015_),
    .Y(_002_[0])
  );
  NOR _154_ (
    .A(_014_),
    .B(lane_0[1]),
    .Y(_018_)
  );
  NAND _155_ (
    .A(_014_),
    .B(_060_),
    .Y(_019_)
  );
  NAND _156_ (
    .A(_019_),
    .B(reset),
    .Y(_020_)
  );
  NOR _157_ (
    .A(_020_),
    .B(_018_),
    .Y(_002_[1])
  );
  NOR _158_ (
    .A(_014_),
    .B(lane_0[2]),
    .Y(_021_)
  );
  NAND _159_ (
    .A(_014_),
    .B(_065_),
    .Y(_022_)
  );
  NAND _160_ (
    .A(_022_),
    .B(reset),
    .Y(_023_)
  );
  NOR _161_ (
    .A(_023_),
    .B(_021_),
    .Y(_002_[2])
  );
  NOR _162_ (
    .A(_014_),
    .B(lane_0[3]),
    .Y(_024_)
  );
  NAND _163_ (
    .A(_014_),
    .B(_070_),
    .Y(_025_)
  );
  NAND _164_ (
    .A(_025_),
    .B(reset),
    .Y(_026_)
  );
  NOR _165_ (
    .A(_026_),
    .B(_024_),
    .Y(_002_[3])
  );
  NOR _166_ (
    .A(_014_),
    .B(lane_0[4]),
    .Y(_027_)
  );
  NAND _167_ (
    .A(_014_),
    .B(_075_),
    .Y(_028_)
  );
  NAND _168_ (
    .A(_028_),
    .B(reset),
    .Y(_029_)
  );
  NOR _169_ (
    .A(_029_),
    .B(_027_),
    .Y(_002_[4])
  );
  NOR _170_ (
    .A(_014_),
    .B(lane_0[5]),
    .Y(_030_)
  );
  NAND _171_ (
    .A(_014_),
    .B(_080_),
    .Y(_031_)
  );
  NAND _172_ (
    .A(_031_),
    .B(reset),
    .Y(_032_)
  );
  NOR _173_ (
    .A(_032_),
    .B(_030_),
    .Y(_002_[5])
  );
  NOR _174_ (
    .A(_014_),
    .B(lane_0[6]),
    .Y(_033_)
  );
  NAND _175_ (
    .A(_014_),
    .B(_005_),
    .Y(_034_)
  );
  NAND _176_ (
    .A(_034_),
    .B(reset),
    .Y(_035_)
  );
  NOR _177_ (
    .A(_035_),
    .B(_033_),
    .Y(_002_[6])
  );
  NOR _178_ (
    .A(_014_),
    .B(lane_0[7]),
    .Y(_036_)
  );
  NAND _179_ (
    .A(_014_),
    .B(_010_),
    .Y(_037_)
  );
  NAND _180_ (
    .A(_037_),
    .B(reset),
    .Y(_038_)
  );
  NOR _181_ (
    .A(_038_),
    .B(_036_),
    .Y(_002_[7])
  );
  DFF _182_ (
    .C(clk_2f),
    .D(_002_[0]),
    .Q(lane_0[0])
  );
  DFF _183_ (
    .C(clk_2f),
    .D(_002_[1]),
    .Q(lane_0[1])
  );
  DFF _184_ (
    .C(clk_2f),
    .D(_002_[2]),
    .Q(lane_0[2])
  );
  DFF _185_ (
    .C(clk_2f),
    .D(_002_[3]),
    .Q(lane_0[3])
  );
  DFF _186_ (
    .C(clk_2f),
    .D(_002_[4]),
    .Q(lane_0[4])
  );
  DFF _187_ (
    .C(clk_2f),
    .D(_002_[5]),
    .Q(lane_0[5])
  );
  DFF _188_ (
    .C(clk_2f),
    .D(_002_[6]),
    .Q(lane_0[6])
  );
  DFF _189_ (
    .C(clk_2f),
    .D(_002_[7]),
    .Q(lane_0[7])
  );
  DFF _190_ (
    .C(clk_2f),
    .D(_003_[0]),
    .Q(lane_1[0])
  );
  DFF _191_ (
    .C(clk_2f),
    .D(_003_[1]),
    .Q(lane_1[1])
  );
  DFF _192_ (
    .C(clk_2f),
    .D(_003_[2]),
    .Q(lane_1[2])
  );
  DFF _193_ (
    .C(clk_2f),
    .D(_003_[3]),
    .Q(lane_1[3])
  );
  DFF _194_ (
    .C(clk_2f),
    .D(_003_[4]),
    .Q(lane_1[4])
  );
  DFF _195_ (
    .C(clk_2f),
    .D(_003_[5]),
    .Q(lane_1[5])
  );
  DFF _196_ (
    .C(clk_2f),
    .D(_003_[6]),
    .Q(lane_1[6])
  );
  DFF _197_ (
    .C(clk_2f),
    .D(_003_[7]),
    .Q(lane_1[7])
  );
  DFF _198_ (
    .C(clk_2f),
    .D(_001_),
    .Q(contador1)
  );
  DFF _199_ (
    .C(clk_2f),
    .D(_000_),
    .Q(contador0)
  );
  assign valid_0F = 1'b0;
  assign valid_1F = 1'b0;
endmodule

(* src = "etapa2_flops_synth.v:1" *)
module etapa2_flops_synth(data_in0, valid_in0, data_out0, valid_out0, clk_8f, reset);
  (* src = "etapa2_flops_synth.v:10" *)
  wire [7:0] _00_;
  (* src = "etapa2_flops_synth.v:10" *)
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  (* src = "etapa2_flops_synth.v:6" *)
  input clk_8f;
  (* src = "etapa2_flops_synth.v:2" *)
  input [7:0] data_in0;
  (* src = "etapa2_flops_synth.v:4" *)
  output [7:0] data_out0;
  (* src = "etapa2_flops_synth.v:7" *)
  input reset;
  (* src = "etapa2_flops_synth.v:3" *)
  input valid_in0;
  (* src = "etapa2_flops_synth.v:5" *)
  output valid_out0;
  NOT _12_ (
    .A(data_in0[0]),
    .Y(_02_)
  );
  NOT _13_ (
    .A(reset),
    .Y(_03_)
  );
  NOR _14_ (
    .A(_03_),
    .B(_02_),
    .Y(_00_[0])
  );
  NOT _15_ (
    .A(data_in0[1]),
    .Y(_04_)
  );
  NOR _16_ (
    .A(_04_),
    .B(_03_),
    .Y(_00_[1])
  );
  NOT _17_ (
    .A(data_in0[2]),
    .Y(_05_)
  );
  NOR _18_ (
    .A(_05_),
    .B(_03_),
    .Y(_00_[2])
  );
  NOT _19_ (
    .A(data_in0[3]),
    .Y(_06_)
  );
  NOR _20_ (
    .A(_06_),
    .B(_03_),
    .Y(_00_[3])
  );
  NOT _21_ (
    .A(data_in0[4]),
    .Y(_07_)
  );
  NOR _22_ (
    .A(_07_),
    .B(_03_),
    .Y(_00_[4])
  );
  NOT _23_ (
    .A(data_in0[5]),
    .Y(_08_)
  );
  NOR _24_ (
    .A(_08_),
    .B(_03_),
    .Y(_00_[5])
  );
  NOT _25_ (
    .A(data_in0[6]),
    .Y(_09_)
  );
  NOR _26_ (
    .A(_09_),
    .B(_03_),
    .Y(_00_[6])
  );
  NOT _27_ (
    .A(data_in0[7]),
    .Y(_10_)
  );
  NOR _28_ (
    .A(_10_),
    .B(_03_),
    .Y(_00_[7])
  );
  NOT _29_ (
    .A(valid_in0),
    .Y(_11_)
  );
  NOR _30_ (
    .A(_11_),
    .B(_03_),
    .Y(_01_)
  );
  DFF _31_ (
    .C(clk_8f),
    .D(_00_[0]),
    .Q(data_out0[0])
  );
  DFF _32_ (
    .C(clk_8f),
    .D(_00_[1]),
    .Q(data_out0[1])
  );
  DFF _33_ (
    .C(clk_8f),
    .D(_00_[2]),
    .Q(data_out0[2])
  );
  DFF _34_ (
    .C(clk_8f),
    .D(_00_[3]),
    .Q(data_out0[3])
  );
  DFF _35_ (
    .C(clk_8f),
    .D(_00_[4]),
    .Q(data_out0[4])
  );
  DFF _36_ (
    .C(clk_8f),
    .D(_00_[5]),
    .Q(data_out0[5])
  );
  DFF _37_ (
    .C(clk_8f),
    .D(_00_[6]),
    .Q(data_out0[6])
  );
  DFF _38_ (
    .C(clk_8f),
    .D(_00_[7]),
    .Q(data_out0[7])
  );
  DFF _39_ (
    .C(clk_8f),
    .D(_01_),
    .Q(valid_out0)
  );
endmodule

(* src = "etapa_flops_synth.v:1" *)
module etapa_flops_synth(data_in0, data_in1, valid_in0, valid_in1, data_out0, data_out1, valid_out0, valid_out1, clk_2f, reset);
  (* src = "etapa_flops_synth.v:14" *)
  wire [7:0] _00_;
  (* src = "etapa_flops_synth.v:14" *)
  wire [7:0] _01_;
  (* src = "etapa_flops_synth.v:14" *)
  wire _02_;
  (* src = "etapa_flops_synth.v:14" *)
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  (* src = "etapa_flops_synth.v:10" *)
  input clk_2f;
  (* src = "etapa_flops_synth.v:2" *)
  input [7:0] data_in0;
  (* src = "etapa_flops_synth.v:3" *)
  input [7:0] data_in1;
  (* src = "etapa_flops_synth.v:6" *)
  output [7:0] data_out0;
  (* src = "etapa_flops_synth.v:7" *)
  output [7:0] data_out1;
  (* src = "etapa_flops_synth.v:11" *)
  input reset;
  (* src = "etapa_flops_synth.v:4" *)
  input valid_in0;
  (* src = "etapa_flops_synth.v:5" *)
  input valid_in1;
  (* src = "etapa_flops_synth.v:8" *)
  output valid_out0;
  (* src = "etapa_flops_synth.v:9" *)
  output valid_out1;
  NOT _23_ (
    .A(valid_in0),
    .Y(_04_)
  );
  NOT _24_ (
    .A(reset),
    .Y(_05_)
  );
  NOR _25_ (
    .A(_05_),
    .B(_04_),
    .Y(_02_)
  );
  NOT _26_ (
    .A(data_in1[0]),
    .Y(_06_)
  );
  NOR _27_ (
    .A(_06_),
    .B(_05_),
    .Y(_01_[0])
  );
  NOT _28_ (
    .A(data_in1[1]),
    .Y(_07_)
  );
  NOR _29_ (
    .A(_07_),
    .B(_05_),
    .Y(_01_[1])
  );
  NOT _30_ (
    .A(data_in1[2]),
    .Y(_08_)
  );
  NOR _31_ (
    .A(_08_),
    .B(_05_),
    .Y(_01_[2])
  );
  NOT _32_ (
    .A(data_in1[3]),
    .Y(_09_)
  );
  NOR _33_ (
    .A(_09_),
    .B(_05_),
    .Y(_01_[3])
  );
  NOT _34_ (
    .A(data_in1[4]),
    .Y(_10_)
  );
  NOR _35_ (
    .A(_10_),
    .B(_05_),
    .Y(_01_[4])
  );
  NOT _36_ (
    .A(data_in1[5]),
    .Y(_11_)
  );
  NOR _37_ (
    .A(_11_),
    .B(_05_),
    .Y(_01_[5])
  );
  NOT _38_ (
    .A(data_in1[6]),
    .Y(_12_)
  );
  NOR _39_ (
    .A(_12_),
    .B(_05_),
    .Y(_01_[6])
  );
  NOT _40_ (
    .A(data_in1[7]),
    .Y(_13_)
  );
  NOR _41_ (
    .A(_13_),
    .B(_05_),
    .Y(_01_[7])
  );
  NOT _42_ (
    .A(data_in0[0]),
    .Y(_14_)
  );
  NOR _43_ (
    .A(_14_),
    .B(_05_),
    .Y(_00_[0])
  );
  NOT _44_ (
    .A(data_in0[1]),
    .Y(_15_)
  );
  NOR _45_ (
    .A(_15_),
    .B(_05_),
    .Y(_00_[1])
  );
  NOT _46_ (
    .A(data_in0[2]),
    .Y(_16_)
  );
  NOR _47_ (
    .A(_16_),
    .B(_05_),
    .Y(_00_[2])
  );
  NOT _48_ (
    .A(data_in0[3]),
    .Y(_17_)
  );
  NOR _49_ (
    .A(_17_),
    .B(_05_),
    .Y(_00_[3])
  );
  NOT _50_ (
    .A(data_in0[4]),
    .Y(_18_)
  );
  NOR _51_ (
    .A(_18_),
    .B(_05_),
    .Y(_00_[4])
  );
  NOT _52_ (
    .A(data_in0[5]),
    .Y(_19_)
  );
  NOR _53_ (
    .A(_19_),
    .B(_05_),
    .Y(_00_[5])
  );
  NOT _54_ (
    .A(data_in0[6]),
    .Y(_20_)
  );
  NOR _55_ (
    .A(_20_),
    .B(_05_),
    .Y(_00_[6])
  );
  NOT _56_ (
    .A(data_in0[7]),
    .Y(_21_)
  );
  NOR _57_ (
    .A(_21_),
    .B(_05_),
    .Y(_00_[7])
  );
  NOT _58_ (
    .A(valid_in1),
    .Y(_22_)
  );
  NOR _59_ (
    .A(_22_),
    .B(_05_),
    .Y(_03_)
  );
  DFF _60_ (
    .C(clk_2f),
    .D(_00_[0]),
    .Q(data_out0[0])
  );
  DFF _61_ (
    .C(clk_2f),
    .D(_00_[1]),
    .Q(data_out0[1])
  );
  DFF _62_ (
    .C(clk_2f),
    .D(_00_[2]),
    .Q(data_out0[2])
  );
  DFF _63_ (
    .C(clk_2f),
    .D(_00_[3]),
    .Q(data_out0[3])
  );
  DFF _64_ (
    .C(clk_2f),
    .D(_00_[4]),
    .Q(data_out0[4])
  );
  DFF _65_ (
    .C(clk_2f),
    .D(_00_[5]),
    .Q(data_out0[5])
  );
  DFF _66_ (
    .C(clk_2f),
    .D(_00_[6]),
    .Q(data_out0[6])
  );
  DFF _67_ (
    .C(clk_2f),
    .D(_00_[7]),
    .Q(data_out0[7])
  );
  DFF _68_ (
    .C(clk_2f),
    .D(_01_[0]),
    .Q(data_out1[0])
  );
  DFF _69_ (
    .C(clk_2f),
    .D(_01_[1]),
    .Q(data_out1[1])
  );
  DFF _70_ (
    .C(clk_2f),
    .D(_01_[2]),
    .Q(data_out1[2])
  );
  DFF _71_ (
    .C(clk_2f),
    .D(_01_[3]),
    .Q(data_out1[3])
  );
  DFF _72_ (
    .C(clk_2f),
    .D(_01_[4]),
    .Q(data_out1[4])
  );
  DFF _73_ (
    .C(clk_2f),
    .D(_01_[5]),
    .Q(data_out1[5])
  );
  DFF _74_ (
    .C(clk_2f),
    .D(_01_[6]),
    .Q(data_out1[6])
  );
  DFF _75_ (
    .C(clk_2f),
    .D(_01_[7]),
    .Q(data_out1[7])
  );
  DFF _76_ (
    .C(clk_2f),
    .D(_02_),
    .Q(valid_out0)
  );
  DFF _77_ (
    .C(clk_2f),
    .D(_03_),
    .Q(valid_out1)
  );
endmodule

(* src = "mux_synth.v:1" *)
module mux_synth(clk_2f, reset, data_out, data_in0, data_in1, valid_in0, valid_in1, valid_out);
  (* src = "mux_synth.v:13" *)
  wire [7:0] _000_;
  (* src = "mux_synth.v:13" *)
  wire _001_;
  (* src = "mux_synth.v:13" *)
  wire _002_;
  (* src = "mux_synth.v:13" *)
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  (* src = "mux_synth.v:2" *)
  input clk_2f;
  (* src = "mux_synth.v:5" *)
  input [7:0] data_in0;
  (* src = "mux_synth.v:6" *)
  input [7:0] data_in1;
  (* src = "mux_synth.v:4" *)
  output [7:0] data_out;
  (* src = "mux_synth.v:3" *)
  input reset;
  (* src = "mux_synth.v:11" *)
  wire selector;
  (* src = "mux_synth.v:11" *)
  wire selector2;
  (* src = "mux_synth.v:7" *)
  input valid_in0;
  (* src = "mux_synth.v:8" *)
  input valid_in1;
  (* src = "mux_synth.v:9" *)
  output valid_out;
  NOT _188_ (
    .A(reset),
    .Y(_134_)
  );
  NOR _189_ (
    .A(valid_in0),
    .B(valid_in1),
    .Y(_135_)
  );
  NOR _190_ (
    .A(_135_),
    .B(_134_),
    .Y(_003_)
  );
  NOT _191_ (
    .A(selector2),
    .Y(_136_)
  );
  NAND _192_ (
    .A(valid_in0),
    .B(valid_in1),
    .Y(_137_)
  );
  NOT _193_ (
    .A(_137_),
    .Y(_138_)
  );
  NOR _194_ (
    .A(_137_),
    .B(valid_out),
    .Y(_139_)
  );
  NOT _195_ (
    .A(_139_),
    .Y(_140_)
  );
  NAND _196_ (
    .A(_140_),
    .B(_003_),
    .Y(_141_)
  );
  NAND _197_ (
    .A(_141_),
    .B(_138_),
    .Y(_142_)
  );
  NOR _198_ (
    .A(_142_),
    .B(_136_),
    .Y(_143_)
  );
  NOT _199_ (
    .A(valid_in1),
    .Y(_144_)
  );
  NOT _200_ (
    .A(valid_in0),
    .Y(_145_)
  );
  NAND _201_ (
    .A(_145_),
    .B(_144_),
    .Y(_146_)
  );
  NAND _202_ (
    .A(_146_),
    .B(reset),
    .Y(_147_)
  );
  NOR _203_ (
    .A(_139_),
    .B(_147_),
    .Y(_148_)
  );
  NOR _204_ (
    .A(_148_),
    .B(_137_),
    .Y(_149_)
  );
  NOT _205_ (
    .A(selector),
    .Y(_150_)
  );
  NAND _206_ (
    .A(_145_),
    .B(valid_in1),
    .Y(_151_)
  );
  NAND _207_ (
    .A(_151_),
    .B(_150_),
    .Y(_152_)
  );
  NOR _208_ (
    .A(_145_),
    .B(valid_in1),
    .Y(_153_)
  );
  NOR _209_ (
    .A(_153_),
    .B(_134_),
    .Y(_154_)
  );
  NAND _210_ (
    .A(_154_),
    .B(_152_),
    .Y(_155_)
  );
  NOR _211_ (
    .A(_155_),
    .B(_149_),
    .Y(_156_)
  );
  NOR _212_ (
    .A(_156_),
    .B(_143_),
    .Y(_157_)
  );
  NOR _213_ (
    .A(_157_),
    .B(_134_),
    .Y(_002_)
  );
  NAND _214_ (
    .A(_142_),
    .B(_136_),
    .Y(_158_)
  );
  NAND _215_ (
    .A(_158_),
    .B(reset),
    .Y(_159_)
  );
  NOR _216_ (
    .A(_159_),
    .B(_143_),
    .Y(_001_)
  );
  NOT _217_ (
    .A(data_in0[0]),
    .Y(_160_)
  );
  NOR _218_ (
    .A(_160_),
    .B(selector2),
    .Y(_161_)
  );
  NOT _219_ (
    .A(data_in1[0]),
    .Y(_162_)
  );
  NOR _220_ (
    .A(_162_),
    .B(_136_),
    .Y(_163_)
  );
  NOR _221_ (
    .A(_163_),
    .B(_161_),
    .Y(_164_)
  );
  NOR _222_ (
    .A(_164_),
    .B(_142_),
    .Y(_165_)
  );
  NOR _223_ (
    .A(_155_),
    .B(data_in1[0]),
    .Y(_166_)
  );
  NOR _224_ (
    .A(valid_in0),
    .B(_144_),
    .Y(_167_)
  );
  NOR _225_ (
    .A(_167_),
    .B(selector),
    .Y(_168_)
  );
  NAND _226_ (
    .A(valid_in0),
    .B(_144_),
    .Y(_169_)
  );
  NAND _227_ (
    .A(_169_),
    .B(reset),
    .Y(_170_)
  );
  NOR _228_ (
    .A(_170_),
    .B(_168_),
    .Y(_171_)
  );
  NOR _229_ (
    .A(_171_),
    .B(data_in0[0]),
    .Y(_172_)
  );
  NOR _230_ (
    .A(_172_),
    .B(_166_),
    .Y(_173_)
  );
  NOR _231_ (
    .A(_173_),
    .B(_137_),
    .Y(_174_)
  );
  NOR _232_ (
    .A(_153_),
    .B(_167_),
    .Y(_175_)
  );
  NAND _233_ (
    .A(_175_),
    .B(data_out[0]),
    .Y(_176_)
  );
  NOR _234_ (
    .A(data_in0[0]),
    .B(valid_in1),
    .Y(_177_)
  );
  NOR _235_ (
    .A(_177_),
    .B(_145_),
    .Y(_178_)
  );
  NOR _236_ (
    .A(_151_),
    .B(_162_),
    .Y(_179_)
  );
  NOR _237_ (
    .A(_179_),
    .B(_178_),
    .Y(_180_)
  );
  NAND _238_ (
    .A(_180_),
    .B(_176_),
    .Y(_181_)
  );
  NAND _239_ (
    .A(_181_),
    .B(_142_),
    .Y(_182_)
  );
  NOR _240_ (
    .A(_182_),
    .B(_174_),
    .Y(_183_)
  );
  NOR _241_ (
    .A(_183_),
    .B(_165_),
    .Y(_184_)
  );
  NOR _242_ (
    .A(_184_),
    .B(_134_),
    .Y(_000_[0])
  );
  NAND _243_ (
    .A(_148_),
    .B(_138_),
    .Y(_185_)
  );
  NOT _244_ (
    .A(data_in1[1]),
    .Y(_186_)
  );
  NAND _245_ (
    .A(_171_),
    .B(_186_),
    .Y(_187_)
  );
  NOT _246_ (
    .A(data_in0[1]),
    .Y(_004_)
  );
  NAND _247_ (
    .A(_155_),
    .B(_004_),
    .Y(_005_)
  );
  NAND _248_ (
    .A(_005_),
    .B(_187_),
    .Y(_006_)
  );
  NOR _249_ (
    .A(_006_),
    .B(_185_),
    .Y(_007_)
  );
  NAND _250_ (
    .A(data_in0[1]),
    .B(_136_),
    .Y(_008_)
  );
  NAND _251_ (
    .A(data_in1[1]),
    .B(selector2),
    .Y(_009_)
  );
  NAND _252_ (
    .A(_009_),
    .B(_008_),
    .Y(_010_)
  );
  NAND _253_ (
    .A(_010_),
    .B(_149_),
    .Y(_011_)
  );
  NOT _254_ (
    .A(data_out[1]),
    .Y(_012_)
  );
  NAND _255_ (
    .A(_175_),
    .B(_012_),
    .Y(_013_)
  );
  NOR _256_ (
    .A(_004_),
    .B(valid_in1),
    .Y(_014_)
  );
  NOR _257_ (
    .A(_014_),
    .B(_145_),
    .Y(_015_)
  );
  NOR _258_ (
    .A(_151_),
    .B(data_in1[1]),
    .Y(_016_)
  );
  NOR _259_ (
    .A(_016_),
    .B(_015_),
    .Y(_017_)
  );
  NAND _260_ (
    .A(_017_),
    .B(_013_),
    .Y(_018_)
  );
  NAND _261_ (
    .A(_018_),
    .B(_011_),
    .Y(_019_)
  );
  NOR _262_ (
    .A(_019_),
    .B(_007_),
    .Y(_020_)
  );
  NOR _263_ (
    .A(_020_),
    .B(_134_),
    .Y(_000_[1])
  );
  NOT _264_ (
    .A(data_in1[2]),
    .Y(_021_)
  );
  NAND _265_ (
    .A(_171_),
    .B(_021_),
    .Y(_022_)
  );
  NOT _266_ (
    .A(data_in0[2]),
    .Y(_023_)
  );
  NAND _267_ (
    .A(_155_),
    .B(_023_),
    .Y(_024_)
  );
  NAND _268_ (
    .A(_024_),
    .B(_022_),
    .Y(_025_)
  );
  NOR _269_ (
    .A(_025_),
    .B(_185_),
    .Y(_026_)
  );
  NOT _270_ (
    .A(data_out[2]),
    .Y(_027_)
  );
  NAND _271_ (
    .A(_175_),
    .B(_027_),
    .Y(_028_)
  );
  NOR _272_ (
    .A(_023_),
    .B(valid_in1),
    .Y(_029_)
  );
  NOR _273_ (
    .A(_029_),
    .B(_145_),
    .Y(_030_)
  );
  NOR _274_ (
    .A(_151_),
    .B(data_in1[2]),
    .Y(_031_)
  );
  NOR _275_ (
    .A(_031_),
    .B(_030_),
    .Y(_032_)
  );
  NAND _276_ (
    .A(_032_),
    .B(_028_),
    .Y(_033_)
  );
  NAND _277_ (
    .A(data_in0[2]),
    .B(_136_),
    .Y(_034_)
  );
  NAND _278_ (
    .A(data_in1[2]),
    .B(selector2),
    .Y(_035_)
  );
  NAND _279_ (
    .A(_035_),
    .B(_034_),
    .Y(_036_)
  );
  NAND _280_ (
    .A(_036_),
    .B(_149_),
    .Y(_037_)
  );
  NAND _281_ (
    .A(_037_),
    .B(_033_),
    .Y(_038_)
  );
  NOR _282_ (
    .A(_038_),
    .B(_026_),
    .Y(_039_)
  );
  NOR _283_ (
    .A(_039_),
    .B(_134_),
    .Y(_000_[2])
  );
  NOT _284_ (
    .A(data_in0[3]),
    .Y(_040_)
  );
  NOR _285_ (
    .A(_040_),
    .B(valid_in1),
    .Y(_041_)
  );
  NOR _286_ (
    .A(_041_),
    .B(_145_),
    .Y(_042_)
  );
  NOR _287_ (
    .A(_151_),
    .B(data_in1[3]),
    .Y(_043_)
  );
  NOR _288_ (
    .A(_167_),
    .B(data_out[3]),
    .Y(_044_)
  );
  NOR _289_ (
    .A(_044_),
    .B(_043_),
    .Y(_045_)
  );
  NOR _290_ (
    .A(_045_),
    .B(_153_),
    .Y(_046_)
  );
  NOR _291_ (
    .A(_046_),
    .B(_042_),
    .Y(_047_)
  );
  NAND _292_ (
    .A(_155_),
    .B(_040_),
    .Y(_048_)
  );
  NOR _293_ (
    .A(_155_),
    .B(data_in1[3]),
    .Y(_049_)
  );
  NOR _294_ (
    .A(_049_),
    .B(_185_),
    .Y(_050_)
  );
  NAND _295_ (
    .A(_050_),
    .B(_048_),
    .Y(_051_)
  );
  NAND _296_ (
    .A(data_in0[3]),
    .B(_136_),
    .Y(_052_)
  );
  NAND _297_ (
    .A(data_in1[3]),
    .B(selector2),
    .Y(_053_)
  );
  NAND _298_ (
    .A(_053_),
    .B(_052_),
    .Y(_054_)
  );
  NAND _299_ (
    .A(_054_),
    .B(_149_),
    .Y(_055_)
  );
  NAND _300_ (
    .A(_055_),
    .B(_051_),
    .Y(_056_)
  );
  NOR _301_ (
    .A(_056_),
    .B(_047_),
    .Y(_057_)
  );
  NOR _302_ (
    .A(_057_),
    .B(_134_),
    .Y(_000_[3])
  );
  NOT _303_ (
    .A(data_in0[4]),
    .Y(_058_)
  );
  NOR _304_ (
    .A(_171_),
    .B(_058_),
    .Y(_059_)
  );
  NOT _305_ (
    .A(data_in1[4]),
    .Y(_060_)
  );
  NOR _306_ (
    .A(_155_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _307_ (
    .A(_061_),
    .B(_059_),
    .Y(_062_)
  );
  NOR _308_ (
    .A(_062_),
    .B(_185_),
    .Y(_063_)
  );
  NAND _309_ (
    .A(data_in0[4]),
    .B(_136_),
    .Y(_064_)
  );
  NAND _310_ (
    .A(data_in1[4]),
    .B(selector2),
    .Y(_065_)
  );
  NAND _311_ (
    .A(_065_),
    .B(_064_),
    .Y(_066_)
  );
  NAND _312_ (
    .A(_066_),
    .B(_149_),
    .Y(_067_)
  );
  NOT _313_ (
    .A(data_out[4]),
    .Y(_068_)
  );
  NAND _314_ (
    .A(_175_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _315_ (
    .A(_058_),
    .B(valid_in1),
    .Y(_070_)
  );
  NOR _316_ (
    .A(_070_),
    .B(_145_),
    .Y(_071_)
  );
  NOR _317_ (
    .A(_151_),
    .B(data_in1[4]),
    .Y(_072_)
  );
  NOR _318_ (
    .A(_072_),
    .B(_071_),
    .Y(_073_)
  );
  NAND _319_ (
    .A(_073_),
    .B(_069_),
    .Y(_074_)
  );
  NAND _320_ (
    .A(_074_),
    .B(_067_),
    .Y(_075_)
  );
  NOR _321_ (
    .A(_075_),
    .B(_063_),
    .Y(_076_)
  );
  NOR _322_ (
    .A(_076_),
    .B(_134_),
    .Y(_000_[4])
  );
  NOT _323_ (
    .A(data_in0[5]),
    .Y(_077_)
  );
  NOR _324_ (
    .A(_171_),
    .B(_077_),
    .Y(_078_)
  );
  NOT _325_ (
    .A(data_in1[5]),
    .Y(_079_)
  );
  NOR _326_ (
    .A(_155_),
    .B(_079_),
    .Y(_080_)
  );
  NOR _327_ (
    .A(_080_),
    .B(_078_),
    .Y(_081_)
  );
  NOR _328_ (
    .A(_081_),
    .B(_185_),
    .Y(_082_)
  );
  NAND _329_ (
    .A(data_in0[5]),
    .B(_136_),
    .Y(_083_)
  );
  NAND _330_ (
    .A(data_in1[5]),
    .B(selector2),
    .Y(_084_)
  );
  NAND _331_ (
    .A(_084_),
    .B(_083_),
    .Y(_085_)
  );
  NAND _332_ (
    .A(_085_),
    .B(_149_),
    .Y(_086_)
  );
  NOT _333_ (
    .A(data_out[5]),
    .Y(_087_)
  );
  NAND _334_ (
    .A(_175_),
    .B(_087_),
    .Y(_088_)
  );
  NOR _335_ (
    .A(_077_),
    .B(valid_in1),
    .Y(_089_)
  );
  NOR _336_ (
    .A(_089_),
    .B(_145_),
    .Y(_090_)
  );
  NOR _337_ (
    .A(_151_),
    .B(data_in1[5]),
    .Y(_091_)
  );
  NOR _338_ (
    .A(_091_),
    .B(_090_),
    .Y(_092_)
  );
  NAND _339_ (
    .A(_092_),
    .B(_088_),
    .Y(_093_)
  );
  NAND _340_ (
    .A(_093_),
    .B(_086_),
    .Y(_094_)
  );
  NOR _341_ (
    .A(_094_),
    .B(_082_),
    .Y(_095_)
  );
  NOR _342_ (
    .A(_095_),
    .B(_134_),
    .Y(_000_[5])
  );
  NOT _343_ (
    .A(data_in0[6]),
    .Y(_096_)
  );
  NOR _344_ (
    .A(_171_),
    .B(_096_),
    .Y(_097_)
  );
  NOT _345_ (
    .A(data_in1[6]),
    .Y(_098_)
  );
  NOR _346_ (
    .A(_155_),
    .B(_098_),
    .Y(_099_)
  );
  NOR _347_ (
    .A(_099_),
    .B(_097_),
    .Y(_100_)
  );
  NOR _348_ (
    .A(_100_),
    .B(_185_),
    .Y(_101_)
  );
  NAND _349_ (
    .A(data_in0[6]),
    .B(_136_),
    .Y(_102_)
  );
  NAND _350_ (
    .A(data_in1[6]),
    .B(selector2),
    .Y(_103_)
  );
  NAND _351_ (
    .A(_103_),
    .B(_102_),
    .Y(_104_)
  );
  NAND _352_ (
    .A(_104_),
    .B(_149_),
    .Y(_105_)
  );
  NOT _353_ (
    .A(data_out[6]),
    .Y(_106_)
  );
  NAND _354_ (
    .A(_175_),
    .B(_106_),
    .Y(_107_)
  );
  NOR _355_ (
    .A(_096_),
    .B(valid_in1),
    .Y(_108_)
  );
  NOR _356_ (
    .A(_108_),
    .B(_145_),
    .Y(_109_)
  );
  NOR _357_ (
    .A(_151_),
    .B(data_in1[6]),
    .Y(_110_)
  );
  NOR _358_ (
    .A(_110_),
    .B(_109_),
    .Y(_111_)
  );
  NAND _359_ (
    .A(_111_),
    .B(_107_),
    .Y(_112_)
  );
  NAND _360_ (
    .A(_112_),
    .B(_105_),
    .Y(_113_)
  );
  NOR _361_ (
    .A(_113_),
    .B(_101_),
    .Y(_114_)
  );
  NOR _362_ (
    .A(_114_),
    .B(_134_),
    .Y(_000_[6])
  );
  NOT _363_ (
    .A(data_in0[7]),
    .Y(_115_)
  );
  NOR _364_ (
    .A(_171_),
    .B(_115_),
    .Y(_116_)
  );
  NOT _365_ (
    .A(data_in1[7]),
    .Y(_117_)
  );
  NOR _366_ (
    .A(_155_),
    .B(_117_),
    .Y(_118_)
  );
  NOR _367_ (
    .A(_118_),
    .B(_116_),
    .Y(_119_)
  );
  NOR _368_ (
    .A(_119_),
    .B(_185_),
    .Y(_120_)
  );
  NAND _369_ (
    .A(data_in0[7]),
    .B(_136_),
    .Y(_121_)
  );
  NAND _370_ (
    .A(data_in1[7]),
    .B(selector2),
    .Y(_122_)
  );
  NAND _371_ (
    .A(_122_),
    .B(_121_),
    .Y(_123_)
  );
  NAND _372_ (
    .A(_123_),
    .B(_149_),
    .Y(_124_)
  );
  NOT _373_ (
    .A(data_out[7]),
    .Y(_125_)
  );
  NAND _374_ (
    .A(_175_),
    .B(_125_),
    .Y(_126_)
  );
  NOR _375_ (
    .A(_115_),
    .B(valid_in1),
    .Y(_127_)
  );
  NOR _376_ (
    .A(_127_),
    .B(_145_),
    .Y(_128_)
  );
  NOR _377_ (
    .A(_151_),
    .B(data_in1[7]),
    .Y(_129_)
  );
  NOR _378_ (
    .A(_129_),
    .B(_128_),
    .Y(_130_)
  );
  NAND _379_ (
    .A(_130_),
    .B(_126_),
    .Y(_131_)
  );
  NAND _380_ (
    .A(_131_),
    .B(_124_),
    .Y(_132_)
  );
  NOR _381_ (
    .A(_132_),
    .B(_120_),
    .Y(_133_)
  );
  NOR _382_ (
    .A(_133_),
    .B(_134_),
    .Y(_000_[7])
  );
  DFF _383_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(data_out[0])
  );
  DFF _384_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(data_out[1])
  );
  DFF _385_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(data_out[2])
  );
  DFF _386_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(data_out[3])
  );
  DFF _387_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(data_out[4])
  );
  DFF _388_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(data_out[5])
  );
  DFF _389_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(data_out[6])
  );
  DFF _390_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(data_out[7])
  );
  DFF _391_ (
    .C(clk_2f),
    .D(_003_),
    .Q(valid_out)
  );
  DFF _392_ (
    .C(clk_2f),
    .D(_002_),
    .Q(selector)
  );
  DFF _393_ (
    .C(clk_2f),
    .D(_001_),
    .Q(selector2)
  );
endmodule

(* top =  1  *)
(* src = "synth.v:6" *)
module synth(clk_2f, clk_8f, clk_f, reset, data_in0, data_in1, valid_in0, valid_in1, data2send0_synth, data2send1_synth, data_outS0_synth, data_outS1_synth);
  (* src = "synth.v:7" *)
  input clk_2f;
  (* src = "synth.v:8" *)
  input clk_8f;
  (* src = "synth.v:9" *)
  input clk_f;
  (* src = "synth.v:26" *)
  wire [7:0] d_out;
  (* src = "synth.v:31" *)
  wire [7:0] d_out2;
  (* src = "synth.v:15" *)
  output [7:0] data2send0_synth;
  (* src = "synth.v:16" *)
  output [7:0] data2send1_synth;
  (* src = "synth.v:11" *)
  input [7:0] data_in0;
  (* src = "synth.v:12" *)
  input [7:0] data_in1;
  (* src = "synth.v:17" *)
  output data_outS0_synth;
  (* src = "synth.v:18" *)
  output data_outS1_synth;
  (* src = "synth.v:27" *)
  wire [7:0] in0;
  (* src = "synth.v:28" *)
  wire [7:0] in1;
  (* src = "synth.v:29" *)
  wire [7:0] lane0;
  (* src = "synth.v:30" *)
  wire [7:0] lane1;
  (* src = "synth.v:10" *)
  input reset;
  (* src = "synth.v:35" *)
  wire v_out;
  (* src = "synth.v:35" *)
  wire v_out2;
  (* src = "synth.v:35" *)
  wire valid0;
  (* src = "synth.v:35" *)
  wire valid0bs;
  (* src = "synth.v:35" *)
  wire valid1;
  (* src = "synth.v:35" *)
  wire valid1bs;
  (* src = "synth.v:13" *)
  input valid_in0;
  (* src = "synth.v:14" *)
  input valid_in1;
  (* src = "synth.v:66" *)
  byte_striping_synth byte_striping_synth1 (
    .clk_2f(clk_2f),
    .clk_f(clk_f),
    .data_in(d_out2),
    .lane_0(lane0),
    .lane_1(lane1),
    .reset(reset),
    .valid_0F(valid0bs),
    .valid_1F(valid1bs),
    .valid_in(v_out2)
  );
  (* src = "synth.v:39" *)
  etapa_flops_synth flops (
    .clk_2f(clk_2f),
    .data_in0(data_in0),
    .data_in1(data_in1),
    .data_out0(in0),
    .data_out1(in1),
    .reset(reset),
    .valid_in0(valid_in0),
    .valid_in1(valid_in1),
    .valid_out0(valid0),
    .valid_out1(valid1)
  );
  (* src = "synth.v:59" *)
  etapa2_flops_synth flops2 (
    .clk_8f(clk_8f),
    .data_in0(d_out),
    .data_out0(d_out2),
    .reset(reset),
    .valid_in0(v_out),
    .valid_out0(v_out2)
  );
  (* src = "synth.v:50" *)
  mux_synth mux_synth1 (
    .clk_2f(clk_2f),
    .data_in0(in0),
    .data_in1(in1),
    .data_out(d_out),
    .reset(reset),
    .valid_in0(valid0),
    .valid_in1(valid1),
    .valid_out(v_out)
  );
  (* src = "synth.v:78" *)
  paralelo_serie_synth p2s0 (
    .clk_8f(clk_8f),
    .clk_f(clk_f),
    .data2send(data2send0_synth),
    .data_inP(lane0),
    .data_outS(data_outS0_synth),
    .reset(reset),
    .valid_in(valid0bs)
  );
  (* src = "synth.v:87" *)
  paralelo_serie_synth p2s1 (
    .clk_8f(clk_8f),
    .clk_f(clk_f),
    .data2send(data2send1_synth),
    .data_inP(lane1),
    .data_outS(data_outS1_synth),
    .reset(reset),
    .valid_in(valid1bs)
  );
endmodule
