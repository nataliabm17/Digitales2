/* Generated by Yosys 0.8+463 (git sha1 5772732a, clang 6.0.0-1ubuntu2 -fPIC -Os) */

(* top =  1  *)
(* src = "synth.v:1" *)
module synth(clk_f, clk_2f, reset, lane_0, valid_0, lane_1, valid_1, data_out_synth, valid_out_synth);
  (* src = "synth.v:13" *)
  wire [7:0] _000_;
  (* src = "synth.v:13" *)
  wire _001_;
  (* src = "synth.v:13" *)
  wire _002_;
  (* src = "synth.v:13" *)
  wire _003_;
  (* src = "synth.v:13" *)
  wire _004_;
  (* src = "synth.v:13" *)
  wire _005_;
  (* src = "synth.v:13" *)
  wire _006_;
  (* src = "synth.v:13" *)
  wire _007_;
  (* src = "synth.v:13" *)
  wire _008_;
  (* src = "synth.v:13" *)
  wire _009_;
  (* src = "synth.v:13" *)
  wire _010_;
  (* src = "synth.v:13" *)
  wire _011_;
  (* src = "synth.v:13" *)
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  (* src = "synth.v:3" *)
  input clk_2f;
  (* src = "synth.v:2" *)
  input clk_f;
  (* src = "synth.v:12" *)
  wire contador;
  (* src = "synth.v:9" *)
  output [7:0] data_out_synth;
  (* src = "synth.v:5" *)
  input [7:0] lane_0;
  (* src = "synth.v:7" *)
  input [7:0] lane_1;
  (* src = "synth.v:4" *)
  input reset;
  (* src = "synth.v:12" *)
  wire selector;
  (* src = "synth.v:6" *)
  input valid_0;
  (* src = "synth.v:8" *)
  input valid_1;
  (* src = "synth.v:10" *)
  output valid_out_synth;
  NOT _073_ (
    .A(data_out_synth[0]),
    .Y(_020_)
  );
  NOT _074_ (
    .A(valid_1),
    .Y(_021_)
  );
  NOT _075_ (
    .A(data_out_synth[1]),
    .Y(_022_)
  );
  NOT _076_ (
    .A(data_out_synth[2]),
    .Y(_023_)
  );
  NOT _077_ (
    .A(data_out_synth[3]),
    .Y(_024_)
  );
  NOT _078_ (
    .A(data_out_synth[4]),
    .Y(_025_)
  );
  NOT _079_ (
    .A(data_out_synth[5]),
    .Y(_026_)
  );
  NOT _080_ (
    .A(data_out_synth[6]),
    .Y(_027_)
  );
  NOT _081_ (
    .A(data_out_synth[7]),
    .Y(_028_)
  );
  NOT _082_ (
    .A(valid_0),
    .Y(_029_)
  );
  NOT _083_ (
    .A(selector),
    .Y(_030_)
  );
  NOT _084_ (
    .A(reset),
    .Y(_031_)
  );
  NOR _085_ (
    .A(_029_),
    .B(selector),
    .Y(_032_)
  );
  NAND _086_ (
    .A(valid_0),
    .B(_030_),
    .Y(_033_)
  );
  NOR _087_ (
    .A(_021_),
    .B(_030_),
    .Y(_034_)
  );
  NAND _088_ (
    .A(valid_1),
    .B(selector),
    .Y(_035_)
  );
  NAND _089_ (
    .A(_033_),
    .B(_035_),
    .Y(_036_)
  );
  NAND _090_ (
    .A(reset),
    .B(_036_),
    .Y(_037_)
  );
  NOT _091_ (
    .A(_037_),
    .Y(_002_)
  );
  NOR _092_ (
    .A(valid_0),
    .B(selector),
    .Y(_038_)
  );
  NAND _093_ (
    .A(reset),
    .B(_035_),
    .Y(_039_)
  );
  NOR _094_ (
    .A(_038_),
    .B(_039_),
    .Y(_001_)
  );
  NOR _095_ (
    .A(_020_),
    .B(_036_),
    .Y(_040_)
  );
  NAND _096_ (
    .A(lane_1[0]),
    .B(_034_),
    .Y(_041_)
  );
  NAND _097_ (
    .A(lane_0[0]),
    .B(_032_),
    .Y(_042_)
  );
  NAND _098_ (
    .A(_041_),
    .B(_042_),
    .Y(_043_)
  );
  NOR _099_ (
    .A(_040_),
    .B(_043_),
    .Y(_044_)
  );
  NOR _100_ (
    .A(_031_),
    .B(_044_),
    .Y(_000_[0])
  );
  NOR _101_ (
    .A(_022_),
    .B(_036_),
    .Y(_045_)
  );
  NAND _102_ (
    .A(lane_1[1]),
    .B(_034_),
    .Y(_046_)
  );
  NAND _103_ (
    .A(lane_0[1]),
    .B(_032_),
    .Y(_047_)
  );
  NAND _104_ (
    .A(_046_),
    .B(_047_),
    .Y(_048_)
  );
  NOR _105_ (
    .A(_045_),
    .B(_048_),
    .Y(_049_)
  );
  NOR _106_ (
    .A(_031_),
    .B(_049_),
    .Y(_000_[1])
  );
  NOR _107_ (
    .A(_023_),
    .B(_036_),
    .Y(_050_)
  );
  NAND _108_ (
    .A(lane_1[2]),
    .B(_034_),
    .Y(_051_)
  );
  NAND _109_ (
    .A(lane_0[2]),
    .B(_032_),
    .Y(_052_)
  );
  NAND _110_ (
    .A(_051_),
    .B(_052_),
    .Y(_053_)
  );
  NOR _111_ (
    .A(_050_),
    .B(_053_),
    .Y(_054_)
  );
  NOR _112_ (
    .A(_031_),
    .B(_054_),
    .Y(_000_[2])
  );
  NOR _113_ (
    .A(_024_),
    .B(_036_),
    .Y(_055_)
  );
  NAND _114_ (
    .A(lane_1[3]),
    .B(_034_),
    .Y(_056_)
  );
  NAND _115_ (
    .A(lane_0[3]),
    .B(_032_),
    .Y(_057_)
  );
  NAND _116_ (
    .A(_056_),
    .B(_057_),
    .Y(_058_)
  );
  NOR _117_ (
    .A(_055_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _118_ (
    .A(_031_),
    .B(_059_),
    .Y(_000_[3])
  );
  NOR _119_ (
    .A(_025_),
    .B(_036_),
    .Y(_060_)
  );
  NAND _120_ (
    .A(lane_1[4]),
    .B(_034_),
    .Y(_061_)
  );
  NAND _121_ (
    .A(lane_0[4]),
    .B(_032_),
    .Y(_062_)
  );
  NAND _122_ (
    .A(_061_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _123_ (
    .A(_060_),
    .B(_063_),
    .Y(_064_)
  );
  NOR _124_ (
    .A(_031_),
    .B(_064_),
    .Y(_000_[4])
  );
  NOR _125_ (
    .A(_026_),
    .B(_036_),
    .Y(_065_)
  );
  NAND _126_ (
    .A(lane_1[5]),
    .B(_034_),
    .Y(_066_)
  );
  NAND _127_ (
    .A(lane_0[5]),
    .B(_032_),
    .Y(_067_)
  );
  NAND _128_ (
    .A(_066_),
    .B(_067_),
    .Y(_068_)
  );
  NOR _129_ (
    .A(_065_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _130_ (
    .A(_031_),
    .B(_069_),
    .Y(_000_[5])
  );
  NOR _131_ (
    .A(_027_),
    .B(_036_),
    .Y(_070_)
  );
  NAND _132_ (
    .A(lane_1[6]),
    .B(_034_),
    .Y(_071_)
  );
  NAND _133_ (
    .A(lane_0[6]),
    .B(_032_),
    .Y(_072_)
  );
  NAND _134_ (
    .A(_071_),
    .B(_072_),
    .Y(_013_)
  );
  NOR _135_ (
    .A(_070_),
    .B(_013_),
    .Y(_014_)
  );
  NOR _136_ (
    .A(_031_),
    .B(_014_),
    .Y(_000_[6])
  );
  NOR _137_ (
    .A(_028_),
    .B(_036_),
    .Y(_015_)
  );
  NAND _138_ (
    .A(lane_1[7]),
    .B(_034_),
    .Y(_016_)
  );
  NAND _139_ (
    .A(lane_0[7]),
    .B(_032_),
    .Y(_017_)
  );
  NAND _140_ (
    .A(_016_),
    .B(_017_),
    .Y(_018_)
  );
  NOR _141_ (
    .A(_015_),
    .B(_018_),
    .Y(_019_)
  );
  NOR _142_ (
    .A(_031_),
    .B(_019_),
    .Y(_000_[7])
  );
  (* src = "synth.v:13" *)
  DFF _143_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(data_out_synth[0])
  );
  (* src = "synth.v:13" *)
  DFF _144_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(data_out_synth[1])
  );
  (* src = "synth.v:13" *)
  DFF _145_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(data_out_synth[2])
  );
  (* src = "synth.v:13" *)
  DFF _146_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(data_out_synth[3])
  );
  (* src = "synth.v:13" *)
  DFF _147_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(data_out_synth[4])
  );
  (* src = "synth.v:13" *)
  DFF _148_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(data_out_synth[5])
  );
  (* src = "synth.v:13" *)
  DFF _149_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(data_out_synth[6])
  );
  (* src = "synth.v:13" *)
  DFF _150_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(data_out_synth[7])
  );
  (* src = "synth.v:13" *)
  DFF _151_ (
    .C(clk_2f),
    .D(_002_),
    .Q(valid_out_synth)
  );
  (* src = "synth.v:13" *)
  DFF _152_ (
    .C(clk_2f),
    .D(_001_),
    .Q(selector)
  );
  assign _012_ = _002_;
  assign _011_ = _001_;
  assign _003_ = _000_[0];
  assign _004_ = _000_[1];
  assign _005_ = _000_[2];
  assign _006_ = _000_[3];
  assign _007_ = _000_[4];
  assign _008_ = _000_[5];
  assign _009_ = _000_[6];
  assign _010_ = _000_[7];
  assign contador = 1'h0;
endmodule
