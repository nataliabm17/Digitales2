/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 4.8.4-2ubuntu1~14.04.3 -O2 -fstack-protector -fPIC -Os) */

(* top =  1  *)
(* src = "ParaleloSerie_Est.v:1" *)
module ParaleloSerie_Est(data_inP, reset, clk_8f, clk_f, valid_in, data2send_est, data_outS_est);
  (* src = "ParaleloSerie_Est.v:13" *)
  wire [2:0] _000_;
  (* src = "ParaleloSerie_Est.v:18" *)
  wire [7:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  (* src = "ParaleloSerie_Est.v:19|<techmap.v>:142" *)
  wire [7:0] _071_;
  (* src = "ParaleloSerie_Est.v:19|<techmap.v>:145" *)
  wire [7:0] _072_;
  (* src = "ParaleloSerie_Est.v:19|<techmap.v>:145" *)
  wire [7:0] _073_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _074_;
  wire [31:0] _075_;
  (* src = "<techmap.v>:260|<techmap.v>:221" *)
  wire _076_;
  (* src = "ParaleloSerie_Est.v:4" *)
  input clk_8f;
  (* src = "ParaleloSerie_Est.v:5" *)
  input clk_f;
  (* src = "ParaleloSerie_Est.v:7" *)
  output [7:0] data2send_est;
  (* src = "ParaleloSerie_Est.v:2" *)
  input [7:0] data_inP;
  (* src = "ParaleloSerie_Est.v:8" *)
  output data_outS_est;
  (* src = "ParaleloSerie_Est.v:10" *)
  wire [2:0] out44_est;
  (* src = "ParaleloSerie_Est.v:10" *)
  wire [2:0] out44_estF;
  (* src = "ParaleloSerie_Est.v:3" *)
  input reset;
  (* src = "ParaleloSerie_Est.v:6" *)
  input valid_in;
  NOT _077_ (
    .A(_008_),
    .Y(_016_)
  );
  NOT _078_ (
    .A(_006_),
    .Y(_018_)
  );
  NOR _079_ (
    .A(_018_),
    .B(_016_),
    .Y(_019_)
  );
  NAND _080_ (
    .A(_019_),
    .B(_030_),
    .Y(_021_)
  );
  NOT _081_ (
    .A(_021_),
    .Y(_007_)
  );
  NAND _082_ (
    .A(_019_),
    .B(_002_),
    .Y(_023_)
  );
  NOT _083_ (
    .A(_023_),
    .Y(_009_)
  );
  NOT _084_ (
    .A(_040_),
    .Y(_024_)
  );
  NAND _085_ (
    .A(_019_),
    .B(_024_),
    .Y(_010_)
  );
  NAND _086_ (
    .A(_006_),
    .B(_008_),
    .Y(_026_)
  );
  NOR _087_ (
    .A(_026_),
    .B(_061_),
    .Y(_027_)
  );
  NOT _088_ (
    .A(_027_),
    .Y(_011_)
  );
  NOR _089_ (
    .A(_026_),
    .B(_070_),
    .Y(_028_)
  );
  NOT _090_ (
    .A(_028_),
    .Y(_012_)
  );
  NOR _091_ (
    .A(_026_),
    .B(_003_),
    .Y(_029_)
  );
  NOT _092_ (
    .A(_029_),
    .Y(_013_)
  );
  NOT _093_ (
    .A(_004_),
    .Y(_032_)
  );
  NOR _094_ (
    .A(_026_),
    .B(_032_),
    .Y(_014_)
  );
  NOT _095_ (
    .A(_005_),
    .Y(_034_)
  );
  NAND _096_ (
    .A(_019_),
    .B(_034_),
    .Y(_015_)
  );
  NOT _097_ (
    .A(_017_),
    .Y(_035_)
  );
  NOR _098_ (
    .A(_035_),
    .B(_018_),
    .Y(_037_)
  );
  NOT _099_ (
    .A(_022_),
    .Y(_038_)
  );
  NAND _100_ (
    .A(_027_),
    .B(_038_),
    .Y(_039_)
  );
  NOT _101_ (
    .A(_020_),
    .Y(_041_)
  );
  NOR _102_ (
    .A(_015_),
    .B(_038_),
    .Y(_042_)
  );
  NOR _103_ (
    .A(_042_),
    .B(_041_),
    .Y(_043_)
  );
  NAND _104_ (
    .A(_043_),
    .B(_039_),
    .Y(_044_)
  );
  NAND _105_ (
    .A(_038_),
    .B(_041_),
    .Y(_045_)
  );
  NOR _106_ (
    .A(_045_),
    .B(_023_),
    .Y(_046_)
  );
  NAND _107_ (
    .A(_022_),
    .B(_041_),
    .Y(_047_)
  );
  NOR _108_ (
    .A(_047_),
    .B(_029_),
    .Y(_048_)
  );
  NOR _109_ (
    .A(_048_),
    .B(_046_),
    .Y(_049_)
  );
  NAND _110_ (
    .A(_049_),
    .B(_044_),
    .Y(_050_)
  );
  NAND _111_ (
    .A(_050_),
    .B(_037_),
    .Y(_051_)
  );
  NAND _112_ (
    .A(_010_),
    .B(_038_),
    .Y(_052_)
  );
  NAND _113_ (
    .A(_014_),
    .B(_022_),
    .Y(_053_)
  );
  NAND _114_ (
    .A(_053_),
    .B(_052_),
    .Y(_054_)
  );
  NAND _115_ (
    .A(_054_),
    .B(_020_),
    .Y(_055_)
  );
  NOR _116_ (
    .A(_045_),
    .B(_021_),
    .Y(_056_)
  );
  NOR _117_ (
    .A(_047_),
    .B(_028_),
    .Y(_057_)
  );
  NOR _118_ (
    .A(_057_),
    .B(_056_),
    .Y(_058_)
  );
  NAND _119_ (
    .A(_058_),
    .B(_055_),
    .Y(_059_)
  );
  NOR _120_ (
    .A(_017_),
    .B(_018_),
    .Y(_060_)
  );
  NAND _121_ (
    .A(_060_),
    .B(_059_),
    .Y(_062_)
  );
  NAND _122_ (
    .A(_062_),
    .B(_051_),
    .Y(_025_)
  );
  NOT _123_ (
    .A(_037_),
    .Y(_031_)
  );
  NAND _124_ (
    .A(_020_),
    .B(_017_),
    .Y(_063_)
  );
  NOR _125_ (
    .A(_020_),
    .B(_017_),
    .Y(_064_)
  );
  NOR _126_ (
    .A(_064_),
    .B(_018_),
    .Y(_065_)
  );
  NAND _127_ (
    .A(_065_),
    .B(_063_),
    .Y(_033_)
  );
  NOT _128_ (
    .A(_065_),
    .Y(_066_)
  );
  NOR _129_ (
    .A(_066_),
    .B(_022_),
    .Y(_067_)
  );
  NOT _130_ (
    .A(_060_),
    .Y(_068_)
  );
  NOR _131_ (
    .A(_068_),
    .B(_047_),
    .Y(_069_)
  );
  NOR _132_ (
    .A(_069_),
    .B(_067_),
    .Y(_036_)
  );
  DFF _133_ (
    .C(clk_8f),
    .D(_000_[0]),
    .Q(out44_estF[0])
  );
  DFF _134_ (
    .C(clk_8f),
    .D(_000_[1]),
    .Q(out44_estF[1])
  );
  DFF _135_ (
    .C(clk_8f),
    .D(_000_[2]),
    .Q(out44_estF[2])
  );
  assign _002_ = data_inP[1];
  assign _008_ = valid_in;
  assign _040_ = data_inP[2];
  assign _061_ = data_inP[3];
  assign _070_ = data_inP[4];
  assign _003_ = data_inP[5];
  assign _004_ = data_inP[6];
  assign _005_ = data_inP[7];
  assign _006_ = reset;
  assign data2send_est[0] = _007_;
  assign data2send_est[1] = _009_;
  assign data2send_est[2] = _010_;
  assign data2send_est[3] = _011_;
  assign data2send_est[4] = _012_;
  assign data2send_est[5] = _013_;
  assign data2send_est[6] = _014_;
  assign data2send_est[7] = _015_;
  assign _017_ = out44_estF[0];
  assign _020_ = out44_estF[1];
  assign _022_ = out44_estF[2];
  assign data_outS_est = _025_;
  assign _030_ = data_inP[0];
  assign _000_[0] = _031_;
  assign _000_[1] = _033_;
  assign _000_[2] = _036_;
endmodule
